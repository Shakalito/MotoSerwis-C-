@page "/Client/Add"
@attribute [StreamRendering]
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using MotoSerwis.Data
@using MotoSerwis.Data.Entities

@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<h1>Formularz zgłoszenia klienta</h1>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Input" OnValidSubmit="FormSubmit" FormName="addClient">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.FirstName" class="form-control" placeholder="Jan" />
                <label for="FirstName" class="form-label">Imię</label>
                <ValidationMessage For="() => Input.FirstName" class="text-danger" />
            </div>

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.LastName" class="form-control" placeholder="Kowalski" />
                <label for="LastName" class="form-label">Nazwisko</label>
                <ValidationMessage For="() => Input.LastName" class="text-danger" />
            </div>

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Address" class="form-control" placeholder="Rzeszów 123" />
                <label for="Address" class="form-label">Adres</label>
                <ValidationMessage For="() => Input.Address" class="text-danger" />
            </div>

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.PhoneNumber" class="form-control" placeholder="123 321 123" />
                <label for="PhoneNumber" class="form-label">Numer telefonu</label>
                <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
            </div>

            <button type="submit" class="w-100 btn btn-lg btn-primary">Dodaj</button>
        </EditForm>
    </div>
</div>

@code {
    private ClientInputModel Input { get; set; } = new();

    public async Task FormSubmit()
    {
        var client = new Client
            {
                FirstName = Input.FirstName,
                LastName = Input.LastName,
                Address = Input.Address,
                PhoneNumber = Input.PhoneNumber
            };

        DbContext.Clients.Add(client);
        await DbContext.SaveChangesAsync();

        Navigation.NavigateTo("/Clients");
    }

    private class ClientInputModel
    {
        [Required(ErrorMessage = "Imię jest wymagane")]
        public string FirstName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Nazwisko jest wymagane")]
        public string LastName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Adres jest wymagany")]
        public string Address { get; set; } = string.Empty;

        [Required(ErrorMessage = "Numer telefonu jest wymagany")]
        [Phone(ErrorMessage = "Nieprawidłowy numer telefonu")]
        public string PhoneNumber { get; set; } = string.Empty;
    }
}
